---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure

  broker:
    image: confluentinc/cp-kafka:7.3.3
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    restart: on-failure

  kafka-setup:
    image: confluentinc/cp-kafka:7.3.3
    container_name: kafka-setup
    depends_on:
      - broker
    command: "bash -c 'kafka-topics --create --bootstrap-server broker:29092 --if-not-exists --partitions 1 --replication-factor 1 --topic manufactured && \
                       kafka-topics --create --bootstrap-server broker:29092 --if-not-exists --partitions 1 --replication-factor 1 --topic orders && \
                       kafka-topics --create --bootstrap-server broker:29092 --if-not-exists --partitions 1 --replication-factor 1 --topic shipping'"

  akhq:
    image: tchiotludo/akhq:0.24.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker:29092"
          ui-options:
            topic-data:
              sort: NEWEST
        endpoints:
          loggers:
            enabled: true
            sensitive: false
            write-sensitive: false
    ports:
      - "9090:8080"
      - "28081:28081"
    links:
      - broker
    restart: on-failure